// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UnauthorizedError component unit test matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UnauthorizedError />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          Your session has expired
        </div>
        <div
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          <LinkButton
            color="secondary"
            label="Re-login"
            to="/login"
            variant="contained"
          />
        </div>
      </div>,
      "style": Object {
        "alignItems": "center",
        "display": "flex",
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Your session has expired
          </div>,
          <div
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <LinkButton
              color="secondary"
              label="Re-login"
              to="/login"
              variant="contained"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Your session has expired",
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Your session has expired",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <LinkButton
              color="secondary"
              label="Re-login"
              to="/login"
              variant="contained"
            />,
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "secondary",
              "label": "Re-login",
              "to": "/login",
              "variant": "contained",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Your session has expired
          </div>
          <div
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <LinkButton
              color="secondary"
              label="Re-login"
              to="/login"
              variant="contained"
            />
          </div>
        </div>,
        "style": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              Your session has expired
            </div>,
            <div
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <LinkButton
                color="secondary"
                label="Re-login"
                to="/login"
                variant="contained"
              />
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Your session has expired",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Your session has expired",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <LinkButton
                color="secondary"
                label="Re-login"
                to="/login"
                variant="contained"
              />,
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "secondary",
                "label": "Re-login",
                "to": "/login",
                "variant": "contained",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "childContextTypes": Object {
      "router": [Function],
    },
    "context": Object {
      "router": Object {
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "route": Object {
          "location": Object {},
          "match": Object {},
        },
      },
    },
  },
}
`;
