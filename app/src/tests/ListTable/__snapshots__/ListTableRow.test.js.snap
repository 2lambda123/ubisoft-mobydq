// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListTableRow unit test matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListTableRow
    buttons={
      Array [
        Object {
          "function": "edit",
          "parameter": "/test-route",
        },
      ]
    }
    rowColumns={
      Array [
        "id",
        "name",
        "trueField",
        "falseField",
      ]
    }
    rowData={
      Object {
        "falseField": false,
        "id": 1,
        "name": "mock name",
        "trueField": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ListTableRowContent
          rowColumns={
            Array [
              "id",
              "name",
              "trueField",
              "falseField",
            ]
          }
          rowData={
            Object {
              "falseField": false,
              "id": 1,
              "name": "mock name",
              "trueField": true,
            }
          }
        />,
        <ListTableRowButtons
          buttons={
            Array [
              Object {
                "function": "edit",
                "parameter": "/test-route",
              },
            ]
          }
          value={1}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "rowColumns": Array [
            "id",
            "name",
            "trueField",
            "falseField",
          ],
          "rowData": Object {
            "falseField": false,
            "id": 1,
            "name": "mock name",
            "trueField": true,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "buttons": Array [
            Object {
              "function": "edit",
              "parameter": "/test-route",
            },
          ],
          "value": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ListTableRowContent
            rowColumns={
              Array [
                "id",
                "name",
                "trueField",
                "falseField",
              ]
            }
            rowData={
              Object {
                "falseField": false,
                "id": 1,
                "name": "mock name",
                "trueField": true,
              }
            }
          />,
          <ListTableRowButtons
            buttons={
              Array [
                Object {
                  "function": "edit",
                  "parameter": "/test-route",
                },
              ]
            }
            value={1}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "rowColumns": Array [
              "id",
              "name",
              "trueField",
              "falseField",
            ],
            "rowData": Object {
              "falseField": false,
              "id": 1,
              "name": "mock name",
              "trueField": true,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "buttons": Array [
              Object {
                "function": "edit",
                "parameter": "/test-route",
              },
            ],
            "value": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "childContextTypes": Object {
      "router": [Function],
    },
    "context": Object {
      "router": Object {
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "route": Object {
          "location": Object {},
          "match": Object {},
        },
      },
    },
  },
}
`;
