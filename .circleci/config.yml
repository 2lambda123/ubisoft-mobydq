version: 2
jobs:
  build_application_containers:
    machine: true
    steps:
      - checkout
      - run:
          name: Create environment configuration file
          command: |
            echo "POSTGRES_USER=postgres" >> ./.env
            echo "POSTGRES_PASSWORD=password" >> ./.env
            echo "DATABASE_URL=postgres://postgres:password@db:5432/data_quality" >> ./.env
            echo "GRAPHQL_URL=http://graphql:5433/graphql" >> ./.env
            echo "MAIL_HOST=smtp.server.org" >> ./.env
            echo "MAIL_PORT=25" >> ./.env
            echo "POSTGRES_PASSWORD=123" >> ./.env
            echo "MAIL_SENDER=change@me.com" >> ./.env
            echo "NODE_ENV=development" >> ./.env
            echo "REACT_APP_GRAPHQL_API_URL=http://0.0.0.0:5433/graphql" >> ./.env

      - run:
          name: Build application containers
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.test.yml build db graphql api scripts app

      - run:
          name: Create Docker configuration
          command: |
            docker network create data-quality-network
            docker volume create data-quality-db-volume

      - run:
          name: Start application containers
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d db graphql api

  build_test_containers:
    machine: true
    steps:
      - checkout
      - run:
          name: Build test containers
          command: |
            cd test
            docker-compose build

      - run:
          name: Start test containers
          command: |
            cd test
            docker-compose up -d

  execute_test:
    docker:
      - image: circleci/python:3.6.6-stretch-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install Unix ODBC
          command: |
            sudo apt-get install -y unixodbc-dev

      - run:
          name: Install FreeTDS ODBC driver
          command: |
            sudo apt-get install -y tdsodbc

      - run:
          name: Install MySQL ODBC driver
          command: |
            sudo tar xvzf ./scripts/init/drivers/mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit.tar.gz
            sudo cp ./mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit/lib/libmyodbc8* /usr/lib/x86_64-linux-gnu/odbc/
            sudo rm -R ./mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit

      - run:
          name: Install PostgreSQL ODBC driver
          command: |
            sudo apt-get install -y odbc-postgresql

      - run:
          name: Install Teradata ODBC driver
          command: |
            sudo tar xvzf ./scripts/init/drivers/drivers/tdodbc1620__ubuntu_indep.16.20.00.36-1.tar.gz
            sudo dpkg -i ./tdodbc1620/tdodbc1620-16.20.00.36-1.noarch.deb
            sudo rm -R ./tdodbc1620

      - run:
          name: Move ODBC configuration file
          command: |
            sudo mv -f ./scripts/init/odbcinst.ini /etc

      - run:
          name: Install Python dependencies
          command: |
            sudo pip install --upgrade pip
            sudo pip install -r api/init/requirements.txt
            sudo pip install -r scripts/init/requirements.txt
            sudo pip install nose2
            export PYTHONPATH=./test:$PYTHONPATH
            export PYTHONPATH=./api/init:$PYTHONPATH
            export PYTHONPATH=./scripts/init:$PYTHONPATH

      - run:
          name: Create configuration file
          command: |
            echo "[graphql]" >> ./scripts/init/scripts.cfg
            echo "url = http://0.0.0.0:5433/graphql" >> ./scripts/init/scripts.cfg

      - run:
          name: Run tests
          command: |
            nose2 --plugin nose2.plugins.junitxml --junit-xml -v

      - store_artifacts:
          path: test/junit/test-results.xml
          destination: test-results

      - store_test_results:
          path: test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_application_containers
      - build_test_containers
      - execute_test:
          requires:
            - build_application_containers
            - build_test_containers
