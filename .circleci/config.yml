version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Build application containers
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.test.yml build db graphql api scripts app

      - run:
          name: Start application containers
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d db graphql api

      - run:
          name: Build test containers
          command: |
            cd test
            docker-compose build

      - run:
          name: Start test containers
          command: |
            cd test
            docker-compose up -d

  test:
    docker:
      - image: circleci/python:3.6.6-stretch-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install Unix ODBC
          command: |
            apt-get install -y unixodbc-dev

      - run:
          name: Install FreeTDS ODBC driver
          command: |
            apt-get install -y tdsodbc

      - run:
          name: Install MySQL ODBC driver
          command: |
            tar xvzf ./scripts/init/drivers/mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit.tar.gz
            cp ./mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit/lib/libmyodbc8* /usr/lib/x86_64-linux-gnu/odbc/
            rm -R ./mysql-connector-odbc-8.0.12-linux-debian9-x86-64bit

      - run:
          name: Install PostgreSQL ODBC driver
          command: |
            apt-get install -y odbc-postgresql

      - run:
          name: Install Teradata ODBC driver
          command: |
            tar xvzf ./scripts/init/drivers/drivers/tdodbc1620__ubuntu_indep.16.20.00.36-1.tar.gz
            dpkg -i ./tdodbc1620/tdodbc1620-16.20.00.36-1.noarch.deb
            rm -R ./tdodbc1620

      - run:
          name: Move ODBC configuration file
          command: |
            mv -f ./scripts/init/odbcinst.ini /etc

      - run:
          name: Install Python dependencies
          command: |
            pip install --upgrade pip
            pip install -r api/init/requirements.txt
            pip install -r scripts/init/requirements.txt
            pip install nose2
            export PYTHONPATH=./test:$PYTHONPATH
            export PYTHONPATH=./api/init:$PYTHONPATH
            export PYTHONPATH=./scripts/init:$PYTHONPATH

      - run:
          name: Create configuration file
          command: |
            echo "[graphql]" >> ./scripts.cfg \
            echo "url = http://0.0.0.0:5433/graphql" >> ./scripts.cfg

      - run:
          name: Run tests
          command: |
            nose2 --plugin nose2.plugins.junitxml --junit-xml -v

      - store_artifacts:
          path: test/junit/test-results.xml
          destination: test-results

      - store_test_results:
          path: test
