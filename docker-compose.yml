version: '3'
services:

  db:
    container_name: data-quality-db
    restart: always
    image: data-quality-db
    build:
      context: ./db
    volumes:
      - data-quality-db-volume:/var/lib/postgresql/data
    env_file:
        - ./.env
    ports:
      - 5432:5432
    networks:
      - data-quality-network

  graphql:
    container_name: data-quality-graphql
    restart: always
    image: graphile/postgraphile
    depends_on:
      - db
    env_file:
      - ./.env
    ports:
      - 5433:5433
    command: ["postgraphile", "--connection", "${DATABASE_URL}", "--host", "0.0.0.0", "--port", "5433", "--schema", "base"]
    links:
      - db
    networks:
      - data-quality-network

  scripts:
    container_name: data-quality-scripts
    restart: always
    image: data-quality-scripts
    build:
      context: ./scripts
    volumes:
       - $SCRIPT_VOLUME_PATH:/srv/scripts
    ports:
      - 5434:5434
    tty: true
    depends_on:
      - graphql
    links:
      - graphql
    networks:
      - data-quality-network

  api:
    container_name: data-quality-api
    restart: always
    image: data-quality-api
    build:
      context: ./api
    volumes:
      - $API_VOLUME_PATH:/srv/api/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      FLASK_APP: api.py
      FLASK_RUN_PORT: 5435
      FLASK_DEBUG: 1
    ports:
      - 5435:5435
    command: ["flask", "run", "--host=0.0.0.0"]
    depends_on:
      - scripts
    links:
      - graphql
    networks:
      - data-quality-network

  app-dev:
    container_name: data-quality-app-dev
    restart: always
    image: data-quality-app-dev
    build:
      context: ./app
      dockerfile: Dockerfile-dev
    volumes:
      - $APP_VOLUME_PATH:/usr/src/app
    env_file:
      - ./.env
    ports:
      - 5499:3000
    depends_on:
      - api
      - graphql
    links:
      - api
      - graphql
    networks:
      - data-quality-network

  app-prod:
    container_name: data-quality-app-prod
    build:
      context: ./app
      dockerfile: Dockerfile-prod
    ports:
      - '80:80'

networks:
  data-quality-network:
volumes:
  data-quality-db-volume:
    external: true
